{
    "mtc1.time_atwork_subtour_destination.time_component": {
        "code": "class ComponentTiming:\n    def time_component(self):\n        componentwise.run_component(self.component_name)\n\n    def setup(self):\n        componentwise.setup_component(self.component_name, model_dir(), PRELOAD_INJECTABLES)\n\ndef setup_cache():\n\n    if workspace.get_dir() is None:\n        from asv.console import log\n        for k,v in os.environ.items():\n            log.error(f\" env {k}: {v}\")\n        raise RuntimeError(\"workspace unavailable\")\n    os.makedirs(os.path.join(local_dir(), \"models\"), exist_ok=True)\n    get_example(\n        example_name=EXAMPLE_NAME,\n        destination=os.path.join(local_dir(), \"models\"),\n    )\n    settings_filename = os.path.join(model_dir(), \"configs\", \"settings.yaml\")\n    with open(settings_filename, 'rt') as f:\n        models = yaml.load(f, Loader=yaml.loader.SafeLoader).get('models')\n\n    last_component_to_benchmark = 0\n    for component_name in COMPONENT_NAMES:\n        last_component_to_benchmark = max(\n            models.index(component_name),\n            last_component_to_benchmark\n        )\n    pre_run_model_list = models[:last_component_to_benchmark]\n    modify_yaml(\n        os.path.join(model_dir(), \"configs\", \"settings.yaml\"),\n        **BENCHMARK_SETTINGS,\n        models=pre_run_model_list,\n        checkpoints=True,\n        trace_hh_id=None,\n        chunk_training_mode='off',\n    )\n    modify_yaml(\n        os.path.join(model_dir(), \"configs\", \"network_los.yaml\"),\n        read_skim_cache=True,\n    )\n    componentwise.pre_run(model_dir())",
        "min_run_count": 2,
        "name": "mtc1.time_atwork_subtour_destination.time_component",
        "number": 1,
        "param_names": [],
        "params": [],
        "pretty_name": "example_mtc_full:atwork_subtour_destination",
        "processes": 2,
        "sample_time": 0.01,
        "setup_cache_key": "C:\\Users\\jeffnewman\\activitysim_benchmarks\\benchmarks\\mtc1.py:69",
        "timeout": 36000.0,
        "type": "time",
        "unit": "seconds",
        "version": "8592f19e902161115468ea73d8595d4151c9b826b7d334da36c48ad7a79f3965",
        "warmup_time": -1
    },
    "mtc1.time_atwork_subtour_frequency.time_component": {
        "code": "class ComponentTiming:\n    def time_component(self):\n        componentwise.run_component(self.component_name)\n\n    def setup(self):\n        componentwise.setup_component(self.component_name, model_dir(), PRELOAD_INJECTABLES)\n\ndef setup_cache():\n\n    if workspace.get_dir() is None:\n        from asv.console import log\n        for k,v in os.environ.items():\n            log.error(f\" env {k}: {v}\")\n        raise RuntimeError(\"workspace unavailable\")\n    os.makedirs(os.path.join(local_dir(), \"models\"), exist_ok=True)\n    get_example(\n        example_name=EXAMPLE_NAME,\n        destination=os.path.join(local_dir(), \"models\"),\n    )\n    settings_filename = os.path.join(model_dir(), \"configs\", \"settings.yaml\")\n    with open(settings_filename, 'rt') as f:\n        models = yaml.load(f, Loader=yaml.loader.SafeLoader).get('models')\n\n    last_component_to_benchmark = 0\n    for component_name in COMPONENT_NAMES:\n        last_component_to_benchmark = max(\n            models.index(component_name),\n            last_component_to_benchmark\n        )\n    pre_run_model_list = models[:last_component_to_benchmark]\n    modify_yaml(\n        os.path.join(model_dir(), \"configs\", \"settings.yaml\"),\n        **BENCHMARK_SETTINGS,\n        models=pre_run_model_list,\n        checkpoints=True,\n        trace_hh_id=None,\n        chunk_training_mode='off',\n    )\n    modify_yaml(\n        os.path.join(model_dir(), \"configs\", \"network_los.yaml\"),\n        read_skim_cache=True,\n    )\n    componentwise.pre_run(model_dir())",
        "min_run_count": 2,
        "name": "mtc1.time_atwork_subtour_frequency.time_component",
        "number": 1,
        "param_names": [],
        "params": [],
        "pretty_name": "example_mtc_full:atwork_subtour_frequency",
        "processes": 2,
        "sample_time": 0.01,
        "setup_cache_key": "C:\\Users\\jeffnewman\\activitysim_benchmarks\\benchmarks\\mtc1.py:69",
        "timeout": 36000.0,
        "type": "time",
        "unit": "seconds",
        "version": "8592f19e902161115468ea73d8595d4151c9b826b7d334da36c48ad7a79f3965",
        "warmup_time": -1
    },
    "mtc1.time_atwork_subtour_mode_choice.time_component": {
        "code": "class ComponentTiming:\n    def time_component(self):\n        componentwise.run_component(self.component_name)\n\n    def setup(self):\n        componentwise.setup_component(self.component_name, model_dir(), PRELOAD_INJECTABLES)\n\ndef setup_cache():\n\n    if workspace.get_dir() is None:\n        from asv.console import log\n        for k,v in os.environ.items():\n            log.error(f\" env {k}: {v}\")\n        raise RuntimeError(\"workspace unavailable\")\n    os.makedirs(os.path.join(local_dir(), \"models\"), exist_ok=True)\n    get_example(\n        example_name=EXAMPLE_NAME,\n        destination=os.path.join(local_dir(), \"models\"),\n    )\n    settings_filename = os.path.join(model_dir(), \"configs\", \"settings.yaml\")\n    with open(settings_filename, 'rt') as f:\n        models = yaml.load(f, Loader=yaml.loader.SafeLoader).get('models')\n\n    last_component_to_benchmark = 0\n    for component_name in COMPONENT_NAMES:\n        last_component_to_benchmark = max(\n            models.index(component_name),\n            last_component_to_benchmark\n        )\n    pre_run_model_list = models[:last_component_to_benchmark]\n    modify_yaml(\n        os.path.join(model_dir(), \"configs\", \"settings.yaml\"),\n        **BENCHMARK_SETTINGS,\n        models=pre_run_model_list,\n        checkpoints=True,\n        trace_hh_id=None,\n        chunk_training_mode='off',\n    )\n    modify_yaml(\n        os.path.join(model_dir(), \"configs\", \"network_los.yaml\"),\n        read_skim_cache=True,\n    )\n    componentwise.pre_run(model_dir())",
        "min_run_count": 2,
        "name": "mtc1.time_atwork_subtour_mode_choice.time_component",
        "number": 1,
        "param_names": [],
        "params": [],
        "pretty_name": "example_mtc_full:atwork_subtour_mode_choice",
        "processes": 2,
        "sample_time": 0.01,
        "setup_cache_key": "C:\\Users\\jeffnewman\\activitysim_benchmarks\\benchmarks\\mtc1.py:69",
        "timeout": 36000.0,
        "type": "time",
        "unit": "seconds",
        "version": "8592f19e902161115468ea73d8595d4151c9b826b7d334da36c48ad7a79f3965",
        "warmup_time": -1
    },
    "mtc1.time_atwork_subtour_scheduling.time_component": {
        "code": "class ComponentTiming:\n    def time_component(self):\n        componentwise.run_component(self.component_name)\n\n    def setup(self):\n        componentwise.setup_component(self.component_name, model_dir(), PRELOAD_INJECTABLES)\n\ndef setup_cache():\n\n    if workspace.get_dir() is None:\n        from asv.console import log\n        for k,v in os.environ.items():\n            log.error(f\" env {k}: {v}\")\n        raise RuntimeError(\"workspace unavailable\")\n    os.makedirs(os.path.join(local_dir(), \"models\"), exist_ok=True)\n    get_example(\n        example_name=EXAMPLE_NAME,\n        destination=os.path.join(local_dir(), \"models\"),\n    )\n    settings_filename = os.path.join(model_dir(), \"configs\", \"settings.yaml\")\n    with open(settings_filename, 'rt') as f:\n        models = yaml.load(f, Loader=yaml.loader.SafeLoader).get('models')\n\n    last_component_to_benchmark = 0\n    for component_name in COMPONENT_NAMES:\n        last_component_to_benchmark = max(\n            models.index(component_name),\n            last_component_to_benchmark\n        )\n    pre_run_model_list = models[:last_component_to_benchmark]\n    modify_yaml(\n        os.path.join(model_dir(), \"configs\", \"settings.yaml\"),\n        **BENCHMARK_SETTINGS,\n        models=pre_run_model_list,\n        checkpoints=True,\n        trace_hh_id=None,\n        chunk_training_mode='off',\n    )\n    modify_yaml(\n        os.path.join(model_dir(), \"configs\", \"network_los.yaml\"),\n        read_skim_cache=True,\n    )\n    componentwise.pre_run(model_dir())",
        "min_run_count": 2,
        "name": "mtc1.time_atwork_subtour_scheduling.time_component",
        "number": 1,
        "param_names": [],
        "params": [],
        "pretty_name": "example_mtc_full:atwork_subtour_scheduling",
        "processes": 2,
        "sample_time": 0.01,
        "setup_cache_key": "C:\\Users\\jeffnewman\\activitysim_benchmarks\\benchmarks\\mtc1.py:69",
        "timeout": 36000.0,
        "type": "time",
        "unit": "seconds",
        "version": "8592f19e902161115468ea73d8595d4151c9b826b7d334da36c48ad7a79f3965",
        "warmup_time": -1
    },
    "mtc1.time_auto_ownership_simulate.time_component": {
        "code": "class ComponentTiming:\n    def time_component(self):\n        componentwise.run_component(self.component_name)\n\n    def setup(self):\n        componentwise.setup_component(self.component_name, model_dir(), PRELOAD_INJECTABLES)\n\ndef setup_cache():\n\n    if workspace.get_dir() is None:\n        from asv.console import log\n        for k,v in os.environ.items():\n            log.error(f\" env {k}: {v}\")\n        raise RuntimeError(\"workspace unavailable\")\n    os.makedirs(os.path.join(local_dir(), \"models\"), exist_ok=True)\n    get_example(\n        example_name=EXAMPLE_NAME,\n        destination=os.path.join(local_dir(), \"models\"),\n    )\n    settings_filename = os.path.join(model_dir(), \"configs\", \"settings.yaml\")\n    with open(settings_filename, 'rt') as f:\n        models = yaml.load(f, Loader=yaml.loader.SafeLoader).get('models')\n\n    last_component_to_benchmark = 0\n    for component_name in COMPONENT_NAMES:\n        last_component_to_benchmark = max(\n            models.index(component_name),\n            last_component_to_benchmark\n        )\n    pre_run_model_list = models[:last_component_to_benchmark]\n    modify_yaml(\n        os.path.join(model_dir(), \"configs\", \"settings.yaml\"),\n        **BENCHMARK_SETTINGS,\n        models=pre_run_model_list,\n        checkpoints=True,\n        trace_hh_id=None,\n        chunk_training_mode='off',\n    )\n    modify_yaml(\n        os.path.join(model_dir(), \"configs\", \"network_los.yaml\"),\n        read_skim_cache=True,\n    )\n    componentwise.pre_run(model_dir())",
        "min_run_count": 2,
        "name": "mtc1.time_auto_ownership_simulate.time_component",
        "number": 1,
        "param_names": [],
        "params": [],
        "pretty_name": "example_mtc_full:auto_ownership_simulate",
        "processes": 2,
        "sample_time": 0.01,
        "setup_cache_key": "C:\\Users\\jeffnewman\\activitysim_benchmarks\\benchmarks\\mtc1.py:69",
        "timeout": 36000.0,
        "type": "time",
        "unit": "seconds",
        "version": "8592f19e902161115468ea73d8595d4151c9b826b7d334da36c48ad7a79f3965",
        "warmup_time": -1
    },
    "mtc1.time_cdap_simulate.time_component": {
        "code": "class ComponentTiming:\n    def time_component(self):\n        componentwise.run_component(self.component_name)\n\n    def setup(self):\n        componentwise.setup_component(self.component_name, model_dir(), PRELOAD_INJECTABLES)\n\ndef setup_cache():\n\n    if workspace.get_dir() is None:\n        from asv.console import log\n        for k,v in os.environ.items():\n            log.error(f\" env {k}: {v}\")\n        raise RuntimeError(\"workspace unavailable\")\n    os.makedirs(os.path.join(local_dir(), \"models\"), exist_ok=True)\n    get_example(\n        example_name=EXAMPLE_NAME,\n        destination=os.path.join(local_dir(), \"models\"),\n    )\n    settings_filename = os.path.join(model_dir(), \"configs\", \"settings.yaml\")\n    with open(settings_filename, 'rt') as f:\n        models = yaml.load(f, Loader=yaml.loader.SafeLoader).get('models')\n\n    last_component_to_benchmark = 0\n    for component_name in COMPONENT_NAMES:\n        last_component_to_benchmark = max(\n            models.index(component_name),\n            last_component_to_benchmark\n        )\n    pre_run_model_list = models[:last_component_to_benchmark]\n    modify_yaml(\n        os.path.join(model_dir(), \"configs\", \"settings.yaml\"),\n        **BENCHMARK_SETTINGS,\n        models=pre_run_model_list,\n        checkpoints=True,\n        trace_hh_id=None,\n        chunk_training_mode='off',\n    )\n    modify_yaml(\n        os.path.join(model_dir(), \"configs\", \"network_los.yaml\"),\n        read_skim_cache=True,\n    )\n    componentwise.pre_run(model_dir())",
        "min_run_count": 2,
        "name": "mtc1.time_cdap_simulate.time_component",
        "number": 1,
        "param_names": [],
        "params": [],
        "pretty_name": "example_mtc_full:cdap_simulate",
        "processes": 2,
        "sample_time": 0.01,
        "setup_cache_key": "C:\\Users\\jeffnewman\\activitysim_benchmarks\\benchmarks\\mtc1.py:69",
        "timeout": 36000.0,
        "type": "time",
        "unit": "seconds",
        "version": "8592f19e902161115468ea73d8595d4151c9b826b7d334da36c48ad7a79f3965",
        "warmup_time": -1
    },
    "mtc1.time_free_parking.time_component": {
        "code": "class ComponentTiming:\n    def time_component(self):\n        componentwise.run_component(self.component_name)\n\n    def setup(self):\n        componentwise.setup_component(self.component_name, model_dir(), PRELOAD_INJECTABLES)\n\ndef setup_cache():\n\n    if workspace.get_dir() is None:\n        from asv.console import log\n        for k,v in os.environ.items():\n            log.error(f\" env {k}: {v}\")\n        raise RuntimeError(\"workspace unavailable\")\n    os.makedirs(os.path.join(local_dir(), \"models\"), exist_ok=True)\n    get_example(\n        example_name=EXAMPLE_NAME,\n        destination=os.path.join(local_dir(), \"models\"),\n    )\n    settings_filename = os.path.join(model_dir(), \"configs\", \"settings.yaml\")\n    with open(settings_filename, 'rt') as f:\n        models = yaml.load(f, Loader=yaml.loader.SafeLoader).get('models')\n\n    last_component_to_benchmark = 0\n    for component_name in COMPONENT_NAMES:\n        last_component_to_benchmark = max(\n            models.index(component_name),\n            last_component_to_benchmark\n        )\n    pre_run_model_list = models[:last_component_to_benchmark]\n    modify_yaml(\n        os.path.join(model_dir(), \"configs\", \"settings.yaml\"),\n        **BENCHMARK_SETTINGS,\n        models=pre_run_model_list,\n        checkpoints=True,\n        trace_hh_id=None,\n        chunk_training_mode='off',\n    )\n    modify_yaml(\n        os.path.join(model_dir(), \"configs\", \"network_los.yaml\"),\n        read_skim_cache=True,\n    )\n    componentwise.pre_run(model_dir())",
        "min_run_count": 2,
        "name": "mtc1.time_free_parking.time_component",
        "number": 1,
        "param_names": [],
        "params": [],
        "pretty_name": "example_mtc_full:free_parking",
        "processes": 2,
        "sample_time": 0.01,
        "setup_cache_key": "C:\\Users\\jeffnewman\\activitysim_benchmarks\\benchmarks\\mtc1.py:69",
        "timeout": 36000.0,
        "type": "time",
        "unit": "seconds",
        "version": "8592f19e902161115468ea73d8595d4151c9b826b7d334da36c48ad7a79f3965",
        "warmup_time": -1
    },
    "mtc1.time_joint_tour_composition.time_component": {
        "code": "class ComponentTiming:\n    def time_component(self):\n        componentwise.run_component(self.component_name)\n\n    def setup(self):\n        componentwise.setup_component(self.component_name, model_dir(), PRELOAD_INJECTABLES)\n\ndef setup_cache():\n\n    if workspace.get_dir() is None:\n        from asv.console import log\n        for k,v in os.environ.items():\n            log.error(f\" env {k}: {v}\")\n        raise RuntimeError(\"workspace unavailable\")\n    os.makedirs(os.path.join(local_dir(), \"models\"), exist_ok=True)\n    get_example(\n        example_name=EXAMPLE_NAME,\n        destination=os.path.join(local_dir(), \"models\"),\n    )\n    settings_filename = os.path.join(model_dir(), \"configs\", \"settings.yaml\")\n    with open(settings_filename, 'rt') as f:\n        models = yaml.load(f, Loader=yaml.loader.SafeLoader).get('models')\n\n    last_component_to_benchmark = 0\n    for component_name in COMPONENT_NAMES:\n        last_component_to_benchmark = max(\n            models.index(component_name),\n            last_component_to_benchmark\n        )\n    pre_run_model_list = models[:last_component_to_benchmark]\n    modify_yaml(\n        os.path.join(model_dir(), \"configs\", \"settings.yaml\"),\n        **BENCHMARK_SETTINGS,\n        models=pre_run_model_list,\n        checkpoints=True,\n        trace_hh_id=None,\n        chunk_training_mode='off',\n    )\n    modify_yaml(\n        os.path.join(model_dir(), \"configs\", \"network_los.yaml\"),\n        read_skim_cache=True,\n    )\n    componentwise.pre_run(model_dir())",
        "min_run_count": 2,
        "name": "mtc1.time_joint_tour_composition.time_component",
        "number": 1,
        "param_names": [],
        "params": [],
        "pretty_name": "example_mtc_full:joint_tour_composition",
        "processes": 2,
        "sample_time": 0.01,
        "setup_cache_key": "C:\\Users\\jeffnewman\\activitysim_benchmarks\\benchmarks\\mtc1.py:69",
        "timeout": 36000.0,
        "type": "time",
        "unit": "seconds",
        "version": "8592f19e902161115468ea73d8595d4151c9b826b7d334da36c48ad7a79f3965",
        "warmup_time": -1
    },
    "mtc1.time_joint_tour_destination.time_component": {
        "code": "class ComponentTiming:\n    def time_component(self):\n        componentwise.run_component(self.component_name)\n\n    def setup(self):\n        componentwise.setup_component(self.component_name, model_dir(), PRELOAD_INJECTABLES)\n\ndef setup_cache():\n\n    if workspace.get_dir() is None:\n        from asv.console import log\n        for k,v in os.environ.items():\n            log.error(f\" env {k}: {v}\")\n        raise RuntimeError(\"workspace unavailable\")\n    os.makedirs(os.path.join(local_dir(), \"models\"), exist_ok=True)\n    get_example(\n        example_name=EXAMPLE_NAME,\n        destination=os.path.join(local_dir(), \"models\"),\n    )\n    settings_filename = os.path.join(model_dir(), \"configs\", \"settings.yaml\")\n    with open(settings_filename, 'rt') as f:\n        models = yaml.load(f, Loader=yaml.loader.SafeLoader).get('models')\n\n    last_component_to_benchmark = 0\n    for component_name in COMPONENT_NAMES:\n        last_component_to_benchmark = max(\n            models.index(component_name),\n            last_component_to_benchmark\n        )\n    pre_run_model_list = models[:last_component_to_benchmark]\n    modify_yaml(\n        os.path.join(model_dir(), \"configs\", \"settings.yaml\"),\n        **BENCHMARK_SETTINGS,\n        models=pre_run_model_list,\n        checkpoints=True,\n        trace_hh_id=None,\n        chunk_training_mode='off',\n    )\n    modify_yaml(\n        os.path.join(model_dir(), \"configs\", \"network_los.yaml\"),\n        read_skim_cache=True,\n    )\n    componentwise.pre_run(model_dir())",
        "min_run_count": 2,
        "name": "mtc1.time_joint_tour_destination.time_component",
        "number": 1,
        "param_names": [],
        "params": [],
        "pretty_name": "example_mtc_full:joint_tour_destination",
        "processes": 2,
        "sample_time": 0.01,
        "setup_cache_key": "C:\\Users\\jeffnewman\\activitysim_benchmarks\\benchmarks\\mtc1.py:69",
        "timeout": 36000.0,
        "type": "time",
        "unit": "seconds",
        "version": "8592f19e902161115468ea73d8595d4151c9b826b7d334da36c48ad7a79f3965",
        "warmup_time": -1
    },
    "mtc1.time_joint_tour_frequency.time_component": {
        "code": "class ComponentTiming:\n    def time_component(self):\n        componentwise.run_component(self.component_name)\n\n    def setup(self):\n        componentwise.setup_component(self.component_name, model_dir(), PRELOAD_INJECTABLES)\n\ndef setup_cache():\n\n    if workspace.get_dir() is None:\n        from asv.console import log\n        for k,v in os.environ.items():\n            log.error(f\" env {k}: {v}\")\n        raise RuntimeError(\"workspace unavailable\")\n    os.makedirs(os.path.join(local_dir(), \"models\"), exist_ok=True)\n    get_example(\n        example_name=EXAMPLE_NAME,\n        destination=os.path.join(local_dir(), \"models\"),\n    )\n    settings_filename = os.path.join(model_dir(), \"configs\", \"settings.yaml\")\n    with open(settings_filename, 'rt') as f:\n        models = yaml.load(f, Loader=yaml.loader.SafeLoader).get('models')\n\n    last_component_to_benchmark = 0\n    for component_name in COMPONENT_NAMES:\n        last_component_to_benchmark = max(\n            models.index(component_name),\n            last_component_to_benchmark\n        )\n    pre_run_model_list = models[:last_component_to_benchmark]\n    modify_yaml(\n        os.path.join(model_dir(), \"configs\", \"settings.yaml\"),\n        **BENCHMARK_SETTINGS,\n        models=pre_run_model_list,\n        checkpoints=True,\n        trace_hh_id=None,\n        chunk_training_mode='off',\n    )\n    modify_yaml(\n        os.path.join(model_dir(), \"configs\", \"network_los.yaml\"),\n        read_skim_cache=True,\n    )\n    componentwise.pre_run(model_dir())",
        "min_run_count": 2,
        "name": "mtc1.time_joint_tour_frequency.time_component",
        "number": 1,
        "param_names": [],
        "params": [],
        "pretty_name": "example_mtc_full:joint_tour_frequency",
        "processes": 2,
        "sample_time": 0.01,
        "setup_cache_key": "C:\\Users\\jeffnewman\\activitysim_benchmarks\\benchmarks\\mtc1.py:69",
        "timeout": 36000.0,
        "type": "time",
        "unit": "seconds",
        "version": "8592f19e902161115468ea73d8595d4151c9b826b7d334da36c48ad7a79f3965",
        "warmup_time": -1
    },
    "mtc1.time_joint_tour_participation.time_component": {
        "code": "class ComponentTiming:\n    def time_component(self):\n        componentwise.run_component(self.component_name)\n\n    def setup(self):\n        componentwise.setup_component(self.component_name, model_dir(), PRELOAD_INJECTABLES)\n\ndef setup_cache():\n\n    if workspace.get_dir() is None:\n        from asv.console import log\n        for k,v in os.environ.items():\n            log.error(f\" env {k}: {v}\")\n        raise RuntimeError(\"workspace unavailable\")\n    os.makedirs(os.path.join(local_dir(), \"models\"), exist_ok=True)\n    get_example(\n        example_name=EXAMPLE_NAME,\n        destination=os.path.join(local_dir(), \"models\"),\n    )\n    settings_filename = os.path.join(model_dir(), \"configs\", \"settings.yaml\")\n    with open(settings_filename, 'rt') as f:\n        models = yaml.load(f, Loader=yaml.loader.SafeLoader).get('models')\n\n    last_component_to_benchmark = 0\n    for component_name in COMPONENT_NAMES:\n        last_component_to_benchmark = max(\n            models.index(component_name),\n            last_component_to_benchmark\n        )\n    pre_run_model_list = models[:last_component_to_benchmark]\n    modify_yaml(\n        os.path.join(model_dir(), \"configs\", \"settings.yaml\"),\n        **BENCHMARK_SETTINGS,\n        models=pre_run_model_list,\n        checkpoints=True,\n        trace_hh_id=None,\n        chunk_training_mode='off',\n    )\n    modify_yaml(\n        os.path.join(model_dir(), \"configs\", \"network_los.yaml\"),\n        read_skim_cache=True,\n    )\n    componentwise.pre_run(model_dir())",
        "min_run_count": 2,
        "name": "mtc1.time_joint_tour_participation.time_component",
        "number": 1,
        "param_names": [],
        "params": [],
        "pretty_name": "example_mtc_full:joint_tour_participation",
        "processes": 2,
        "sample_time": 0.01,
        "setup_cache_key": "C:\\Users\\jeffnewman\\activitysim_benchmarks\\benchmarks\\mtc1.py:69",
        "timeout": 36000.0,
        "type": "time",
        "unit": "seconds",
        "version": "8592f19e902161115468ea73d8595d4151c9b826b7d334da36c48ad7a79f3965",
        "warmup_time": -1
    },
    "mtc1.time_joint_tour_scheduling.time_component": {
        "code": "class ComponentTiming:\n    def time_component(self):\n        componentwise.run_component(self.component_name)\n\n    def setup(self):\n        componentwise.setup_component(self.component_name, model_dir(), PRELOAD_INJECTABLES)\n\ndef setup_cache():\n\n    if workspace.get_dir() is None:\n        from asv.console import log\n        for k,v in os.environ.items():\n            log.error(f\" env {k}: {v}\")\n        raise RuntimeError(\"workspace unavailable\")\n    os.makedirs(os.path.join(local_dir(), \"models\"), exist_ok=True)\n    get_example(\n        example_name=EXAMPLE_NAME,\n        destination=os.path.join(local_dir(), \"models\"),\n    )\n    settings_filename = os.path.join(model_dir(), \"configs\", \"settings.yaml\")\n    with open(settings_filename, 'rt') as f:\n        models = yaml.load(f, Loader=yaml.loader.SafeLoader).get('models')\n\n    last_component_to_benchmark = 0\n    for component_name in COMPONENT_NAMES:\n        last_component_to_benchmark = max(\n            models.index(component_name),\n            last_component_to_benchmark\n        )\n    pre_run_model_list = models[:last_component_to_benchmark]\n    modify_yaml(\n        os.path.join(model_dir(), \"configs\", \"settings.yaml\"),\n        **BENCHMARK_SETTINGS,\n        models=pre_run_model_list,\n        checkpoints=True,\n        trace_hh_id=None,\n        chunk_training_mode='off',\n    )\n    modify_yaml(\n        os.path.join(model_dir(), \"configs\", \"network_los.yaml\"),\n        read_skim_cache=True,\n    )\n    componentwise.pre_run(model_dir())",
        "min_run_count": 2,
        "name": "mtc1.time_joint_tour_scheduling.time_component",
        "number": 1,
        "param_names": [],
        "params": [],
        "pretty_name": "example_mtc_full:joint_tour_scheduling",
        "processes": 2,
        "sample_time": 0.01,
        "setup_cache_key": "C:\\Users\\jeffnewman\\activitysim_benchmarks\\benchmarks\\mtc1.py:69",
        "timeout": 36000.0,
        "type": "time",
        "unit": "seconds",
        "version": "8592f19e902161115468ea73d8595d4151c9b826b7d334da36c48ad7a79f3965",
        "warmup_time": -1
    },
    "mtc1.time_mandatory_tour_frequency.time_component": {
        "code": "class ComponentTiming:\n    def time_component(self):\n        componentwise.run_component(self.component_name)\n\n    def setup(self):\n        componentwise.setup_component(self.component_name, model_dir(), PRELOAD_INJECTABLES)\n\ndef setup_cache():\n\n    if workspace.get_dir() is None:\n        from asv.console import log\n        for k,v in os.environ.items():\n            log.error(f\" env {k}: {v}\")\n        raise RuntimeError(\"workspace unavailable\")\n    os.makedirs(os.path.join(local_dir(), \"models\"), exist_ok=True)\n    get_example(\n        example_name=EXAMPLE_NAME,\n        destination=os.path.join(local_dir(), \"models\"),\n    )\n    settings_filename = os.path.join(model_dir(), \"configs\", \"settings.yaml\")\n    with open(settings_filename, 'rt') as f:\n        models = yaml.load(f, Loader=yaml.loader.SafeLoader).get('models')\n\n    last_component_to_benchmark = 0\n    for component_name in COMPONENT_NAMES:\n        last_component_to_benchmark = max(\n            models.index(component_name),\n            last_component_to_benchmark\n        )\n    pre_run_model_list = models[:last_component_to_benchmark]\n    modify_yaml(\n        os.path.join(model_dir(), \"configs\", \"settings.yaml\"),\n        **BENCHMARK_SETTINGS,\n        models=pre_run_model_list,\n        checkpoints=True,\n        trace_hh_id=None,\n        chunk_training_mode='off',\n    )\n    modify_yaml(\n        os.path.join(model_dir(), \"configs\", \"network_los.yaml\"),\n        read_skim_cache=True,\n    )\n    componentwise.pre_run(model_dir())",
        "min_run_count": 2,
        "name": "mtc1.time_mandatory_tour_frequency.time_component",
        "number": 1,
        "param_names": [],
        "params": [],
        "pretty_name": "example_mtc_full:mandatory_tour_frequency",
        "processes": 2,
        "sample_time": 0.01,
        "setup_cache_key": "C:\\Users\\jeffnewman\\activitysim_benchmarks\\benchmarks\\mtc1.py:69",
        "timeout": 36000.0,
        "type": "time",
        "unit": "seconds",
        "version": "8592f19e902161115468ea73d8595d4151c9b826b7d334da36c48ad7a79f3965",
        "warmup_time": -1
    },
    "mtc1.time_mandatory_tour_scheduling.time_component": {
        "code": "class ComponentTiming:\n    def time_component(self):\n        componentwise.run_component(self.component_name)\n\n    def setup(self):\n        componentwise.setup_component(self.component_name, model_dir(), PRELOAD_INJECTABLES)\n\ndef setup_cache():\n\n    if workspace.get_dir() is None:\n        from asv.console import log\n        for k,v in os.environ.items():\n            log.error(f\" env {k}: {v}\")\n        raise RuntimeError(\"workspace unavailable\")\n    os.makedirs(os.path.join(local_dir(), \"models\"), exist_ok=True)\n    get_example(\n        example_name=EXAMPLE_NAME,\n        destination=os.path.join(local_dir(), \"models\"),\n    )\n    settings_filename = os.path.join(model_dir(), \"configs\", \"settings.yaml\")\n    with open(settings_filename, 'rt') as f:\n        models = yaml.load(f, Loader=yaml.loader.SafeLoader).get('models')\n\n    last_component_to_benchmark = 0\n    for component_name in COMPONENT_NAMES:\n        last_component_to_benchmark = max(\n            models.index(component_name),\n            last_component_to_benchmark\n        )\n    pre_run_model_list = models[:last_component_to_benchmark]\n    modify_yaml(\n        os.path.join(model_dir(), \"configs\", \"settings.yaml\"),\n        **BENCHMARK_SETTINGS,\n        models=pre_run_model_list,\n        checkpoints=True,\n        trace_hh_id=None,\n        chunk_training_mode='off',\n    )\n    modify_yaml(\n        os.path.join(model_dir(), \"configs\", \"network_los.yaml\"),\n        read_skim_cache=True,\n    )\n    componentwise.pre_run(model_dir())",
        "min_run_count": 2,
        "name": "mtc1.time_mandatory_tour_scheduling.time_component",
        "number": 1,
        "param_names": [],
        "params": [],
        "pretty_name": "example_mtc_full:mandatory_tour_scheduling",
        "processes": 2,
        "sample_time": 0.01,
        "setup_cache_key": "C:\\Users\\jeffnewman\\activitysim_benchmarks\\benchmarks\\mtc1.py:69",
        "timeout": 36000.0,
        "type": "time",
        "unit": "seconds",
        "version": "8592f19e902161115468ea73d8595d4151c9b826b7d334da36c48ad7a79f3965",
        "warmup_time": -1
    },
    "mtc1.time_non_mandatory_tour_destination.time_component": {
        "code": "class ComponentTiming:\n    def time_component(self):\n        componentwise.run_component(self.component_name)\n\n    def setup(self):\n        componentwise.setup_component(self.component_name, model_dir(), PRELOAD_INJECTABLES)\n\ndef setup_cache():\n\n    if workspace.get_dir() is None:\n        from asv.console import log\n        for k,v in os.environ.items():\n            log.error(f\" env {k}: {v}\")\n        raise RuntimeError(\"workspace unavailable\")\n    os.makedirs(os.path.join(local_dir(), \"models\"), exist_ok=True)\n    get_example(\n        example_name=EXAMPLE_NAME,\n        destination=os.path.join(local_dir(), \"models\"),\n    )\n    settings_filename = os.path.join(model_dir(), \"configs\", \"settings.yaml\")\n    with open(settings_filename, 'rt') as f:\n        models = yaml.load(f, Loader=yaml.loader.SafeLoader).get('models')\n\n    last_component_to_benchmark = 0\n    for component_name in COMPONENT_NAMES:\n        last_component_to_benchmark = max(\n            models.index(component_name),\n            last_component_to_benchmark\n        )\n    pre_run_model_list = models[:last_component_to_benchmark]\n    modify_yaml(\n        os.path.join(model_dir(), \"configs\", \"settings.yaml\"),\n        **BENCHMARK_SETTINGS,\n        models=pre_run_model_list,\n        checkpoints=True,\n        trace_hh_id=None,\n        chunk_training_mode='off',\n    )\n    modify_yaml(\n        os.path.join(model_dir(), \"configs\", \"network_los.yaml\"),\n        read_skim_cache=True,\n    )\n    componentwise.pre_run(model_dir())",
        "min_run_count": 2,
        "name": "mtc1.time_non_mandatory_tour_destination.time_component",
        "number": 1,
        "param_names": [],
        "params": [],
        "pretty_name": "example_mtc_full:non_mandatory_tour_destination",
        "processes": 2,
        "sample_time": 0.01,
        "setup_cache_key": "C:\\Users\\jeffnewman\\activitysim_benchmarks\\benchmarks\\mtc1.py:69",
        "timeout": 36000.0,
        "type": "time",
        "unit": "seconds",
        "version": "8592f19e902161115468ea73d8595d4151c9b826b7d334da36c48ad7a79f3965",
        "warmup_time": -1
    },
    "mtc1.time_non_mandatory_tour_frequency.time_component": {
        "code": "class ComponentTiming:\n    def time_component(self):\n        componentwise.run_component(self.component_name)\n\n    def setup(self):\n        componentwise.setup_component(self.component_name, model_dir(), PRELOAD_INJECTABLES)\n\ndef setup_cache():\n\n    if workspace.get_dir() is None:\n        from asv.console import log\n        for k,v in os.environ.items():\n            log.error(f\" env {k}: {v}\")\n        raise RuntimeError(\"workspace unavailable\")\n    os.makedirs(os.path.join(local_dir(), \"models\"), exist_ok=True)\n    get_example(\n        example_name=EXAMPLE_NAME,\n        destination=os.path.join(local_dir(), \"models\"),\n    )\n    settings_filename = os.path.join(model_dir(), \"configs\", \"settings.yaml\")\n    with open(settings_filename, 'rt') as f:\n        models = yaml.load(f, Loader=yaml.loader.SafeLoader).get('models')\n\n    last_component_to_benchmark = 0\n    for component_name in COMPONENT_NAMES:\n        last_component_to_benchmark = max(\n            models.index(component_name),\n            last_component_to_benchmark\n        )\n    pre_run_model_list = models[:last_component_to_benchmark]\n    modify_yaml(\n        os.path.join(model_dir(), \"configs\", \"settings.yaml\"),\n        **BENCHMARK_SETTINGS,\n        models=pre_run_model_list,\n        checkpoints=True,\n        trace_hh_id=None,\n        chunk_training_mode='off',\n    )\n    modify_yaml(\n        os.path.join(model_dir(), \"configs\", \"network_los.yaml\"),\n        read_skim_cache=True,\n    )\n    componentwise.pre_run(model_dir())",
        "min_run_count": 2,
        "name": "mtc1.time_non_mandatory_tour_frequency.time_component",
        "number": 1,
        "param_names": [],
        "params": [],
        "pretty_name": "example_mtc_full:non_mandatory_tour_frequency",
        "processes": 2,
        "sample_time": 0.01,
        "setup_cache_key": "C:\\Users\\jeffnewman\\activitysim_benchmarks\\benchmarks\\mtc1.py:69",
        "timeout": 36000.0,
        "type": "time",
        "unit": "seconds",
        "version": "8592f19e902161115468ea73d8595d4151c9b826b7d334da36c48ad7a79f3965",
        "warmup_time": -1
    },
    "mtc1.time_non_mandatory_tour_scheduling.time_component": {
        "code": "class ComponentTiming:\n    def time_component(self):\n        componentwise.run_component(self.component_name)\n\n    def setup(self):\n        componentwise.setup_component(self.component_name, model_dir(), PRELOAD_INJECTABLES)\n\ndef setup_cache():\n\n    if workspace.get_dir() is None:\n        from asv.console import log\n        for k,v in os.environ.items():\n            log.error(f\" env {k}: {v}\")\n        raise RuntimeError(\"workspace unavailable\")\n    os.makedirs(os.path.join(local_dir(), \"models\"), exist_ok=True)\n    get_example(\n        example_name=EXAMPLE_NAME,\n        destination=os.path.join(local_dir(), \"models\"),\n    )\n    settings_filename = os.path.join(model_dir(), \"configs\", \"settings.yaml\")\n    with open(settings_filename, 'rt') as f:\n        models = yaml.load(f, Loader=yaml.loader.SafeLoader).get('models')\n\n    last_component_to_benchmark = 0\n    for component_name in COMPONENT_NAMES:\n        last_component_to_benchmark = max(\n            models.index(component_name),\n            last_component_to_benchmark\n        )\n    pre_run_model_list = models[:last_component_to_benchmark]\n    modify_yaml(\n        os.path.join(model_dir(), \"configs\", \"settings.yaml\"),\n        **BENCHMARK_SETTINGS,\n        models=pre_run_model_list,\n        checkpoints=True,\n        trace_hh_id=None,\n        chunk_training_mode='off',\n    )\n    modify_yaml(\n        os.path.join(model_dir(), \"configs\", \"network_los.yaml\"),\n        read_skim_cache=True,\n    )\n    componentwise.pre_run(model_dir())",
        "min_run_count": 2,
        "name": "mtc1.time_non_mandatory_tour_scheduling.time_component",
        "number": 1,
        "param_names": [],
        "params": [],
        "pretty_name": "example_mtc_full:non_mandatory_tour_scheduling",
        "processes": 2,
        "sample_time": 0.01,
        "setup_cache_key": "C:\\Users\\jeffnewman\\activitysim_benchmarks\\benchmarks\\mtc1.py:69",
        "timeout": 36000.0,
        "type": "time",
        "unit": "seconds",
        "version": "8592f19e902161115468ea73d8595d4151c9b826b7d334da36c48ad7a79f3965",
        "warmup_time": -1
    },
    "mtc1.time_school_location.time_component": {
        "code": "class ComponentTiming:\n    def time_component(self):\n        componentwise.run_component(self.component_name)\n\n    def setup(self):\n        componentwise.setup_component(self.component_name, model_dir(), PRELOAD_INJECTABLES)\n\ndef setup_cache():\n\n    if workspace.get_dir() is None:\n        from asv.console import log\n        for k,v in os.environ.items():\n            log.error(f\" env {k}: {v}\")\n        raise RuntimeError(\"workspace unavailable\")\n    os.makedirs(os.path.join(local_dir(), \"models\"), exist_ok=True)\n    get_example(\n        example_name=EXAMPLE_NAME,\n        destination=os.path.join(local_dir(), \"models\"),\n    )\n    settings_filename = os.path.join(model_dir(), \"configs\", \"settings.yaml\")\n    with open(settings_filename, 'rt') as f:\n        models = yaml.load(f, Loader=yaml.loader.SafeLoader).get('models')\n\n    last_component_to_benchmark = 0\n    for component_name in COMPONENT_NAMES:\n        last_component_to_benchmark = max(\n            models.index(component_name),\n            last_component_to_benchmark\n        )\n    pre_run_model_list = models[:last_component_to_benchmark]\n    modify_yaml(\n        os.path.join(model_dir(), \"configs\", \"settings.yaml\"),\n        **BENCHMARK_SETTINGS,\n        models=pre_run_model_list,\n        checkpoints=True,\n        trace_hh_id=None,\n        chunk_training_mode='off',\n    )\n    modify_yaml(\n        os.path.join(model_dir(), \"configs\", \"network_los.yaml\"),\n        read_skim_cache=True,\n    )\n    componentwise.pre_run(model_dir())",
        "min_run_count": 2,
        "name": "mtc1.time_school_location.time_component",
        "number": 1,
        "param_names": [],
        "params": [],
        "pretty_name": "example_mtc_full:school_location",
        "processes": 2,
        "sample_time": 0.01,
        "setup_cache_key": "C:\\Users\\jeffnewman\\activitysim_benchmarks\\benchmarks\\mtc1.py:69",
        "timeout": 36000.0,
        "type": "time",
        "unit": "seconds",
        "version": "8592f19e902161115468ea73d8595d4151c9b826b7d334da36c48ad7a79f3965",
        "warmup_time": -1
    },
    "mtc1.time_stop_frequency.time_component": {
        "code": "class ComponentTiming:\n    def time_component(self):\n        componentwise.run_component(self.component_name)\n\n    def setup(self):\n        componentwise.setup_component(self.component_name, model_dir(), PRELOAD_INJECTABLES)\n\ndef setup_cache():\n\n    if workspace.get_dir() is None:\n        from asv.console import log\n        for k,v in os.environ.items():\n            log.error(f\" env {k}: {v}\")\n        raise RuntimeError(\"workspace unavailable\")\n    os.makedirs(os.path.join(local_dir(), \"models\"), exist_ok=True)\n    get_example(\n        example_name=EXAMPLE_NAME,\n        destination=os.path.join(local_dir(), \"models\"),\n    )\n    settings_filename = os.path.join(model_dir(), \"configs\", \"settings.yaml\")\n    with open(settings_filename, 'rt') as f:\n        models = yaml.load(f, Loader=yaml.loader.SafeLoader).get('models')\n\n    last_component_to_benchmark = 0\n    for component_name in COMPONENT_NAMES:\n        last_component_to_benchmark = max(\n            models.index(component_name),\n            last_component_to_benchmark\n        )\n    pre_run_model_list = models[:last_component_to_benchmark]\n    modify_yaml(\n        os.path.join(model_dir(), \"configs\", \"settings.yaml\"),\n        **BENCHMARK_SETTINGS,\n        models=pre_run_model_list,\n        checkpoints=True,\n        trace_hh_id=None,\n        chunk_training_mode='off',\n    )\n    modify_yaml(\n        os.path.join(model_dir(), \"configs\", \"network_los.yaml\"),\n        read_skim_cache=True,\n    )\n    componentwise.pre_run(model_dir())",
        "min_run_count": 2,
        "name": "mtc1.time_stop_frequency.time_component",
        "number": 1,
        "param_names": [],
        "params": [],
        "pretty_name": "example_mtc_full:stop_frequency",
        "processes": 2,
        "sample_time": 0.01,
        "setup_cache_key": "C:\\Users\\jeffnewman\\activitysim_benchmarks\\benchmarks\\mtc1.py:69",
        "timeout": 36000.0,
        "type": "time",
        "unit": "seconds",
        "version": "8592f19e902161115468ea73d8595d4151c9b826b7d334da36c48ad7a79f3965",
        "warmup_time": -1
    },
    "mtc1.time_tour_mode_choice_simulate.time_component": {
        "code": "class ComponentTiming:\n    def time_component(self):\n        componentwise.run_component(self.component_name)\n\n    def setup(self):\n        componentwise.setup_component(self.component_name, model_dir(), PRELOAD_INJECTABLES)\n\ndef setup_cache():\n\n    if workspace.get_dir() is None:\n        from asv.console import log\n        for k,v in os.environ.items():\n            log.error(f\" env {k}: {v}\")\n        raise RuntimeError(\"workspace unavailable\")\n    os.makedirs(os.path.join(local_dir(), \"models\"), exist_ok=True)\n    get_example(\n        example_name=EXAMPLE_NAME,\n        destination=os.path.join(local_dir(), \"models\"),\n    )\n    settings_filename = os.path.join(model_dir(), \"configs\", \"settings.yaml\")\n    with open(settings_filename, 'rt') as f:\n        models = yaml.load(f, Loader=yaml.loader.SafeLoader).get('models')\n\n    last_component_to_benchmark = 0\n    for component_name in COMPONENT_NAMES:\n        last_component_to_benchmark = max(\n            models.index(component_name),\n            last_component_to_benchmark\n        )\n    pre_run_model_list = models[:last_component_to_benchmark]\n    modify_yaml(\n        os.path.join(model_dir(), \"configs\", \"settings.yaml\"),\n        **BENCHMARK_SETTINGS,\n        models=pre_run_model_list,\n        checkpoints=True,\n        trace_hh_id=None,\n        chunk_training_mode='off',\n    )\n    modify_yaml(\n        os.path.join(model_dir(), \"configs\", \"network_los.yaml\"),\n        read_skim_cache=True,\n    )\n    componentwise.pre_run(model_dir())",
        "min_run_count": 2,
        "name": "mtc1.time_tour_mode_choice_simulate.time_component",
        "number": 1,
        "param_names": [],
        "params": [],
        "pretty_name": "example_mtc_full:tour_mode_choice_simulate",
        "processes": 2,
        "sample_time": 0.01,
        "setup_cache_key": "C:\\Users\\jeffnewman\\activitysim_benchmarks\\benchmarks\\mtc1.py:69",
        "timeout": 36000.0,
        "type": "time",
        "unit": "seconds",
        "version": "8592f19e902161115468ea73d8595d4151c9b826b7d334da36c48ad7a79f3965",
        "warmup_time": -1
    },
    "mtc1.time_trip_destination.time_component": {
        "code": "class ComponentTiming:\n    def time_component(self):\n        componentwise.run_component(self.component_name)\n\n    def setup(self):\n        componentwise.setup_component(self.component_name, model_dir(), PRELOAD_INJECTABLES)\n\ndef setup_cache():\n\n    if workspace.get_dir() is None:\n        from asv.console import log\n        for k,v in os.environ.items():\n            log.error(f\" env {k}: {v}\")\n        raise RuntimeError(\"workspace unavailable\")\n    os.makedirs(os.path.join(local_dir(), \"models\"), exist_ok=True)\n    get_example(\n        example_name=EXAMPLE_NAME,\n        destination=os.path.join(local_dir(), \"models\"),\n    )\n    settings_filename = os.path.join(model_dir(), \"configs\", \"settings.yaml\")\n    with open(settings_filename, 'rt') as f:\n        models = yaml.load(f, Loader=yaml.loader.SafeLoader).get('models')\n\n    last_component_to_benchmark = 0\n    for component_name in COMPONENT_NAMES:\n        last_component_to_benchmark = max(\n            models.index(component_name),\n            last_component_to_benchmark\n        )\n    pre_run_model_list = models[:last_component_to_benchmark]\n    modify_yaml(\n        os.path.join(model_dir(), \"configs\", \"settings.yaml\"),\n        **BENCHMARK_SETTINGS,\n        models=pre_run_model_list,\n        checkpoints=True,\n        trace_hh_id=None,\n        chunk_training_mode='off',\n    )\n    modify_yaml(\n        os.path.join(model_dir(), \"configs\", \"network_los.yaml\"),\n        read_skim_cache=True,\n    )\n    componentwise.pre_run(model_dir())",
        "min_run_count": 2,
        "name": "mtc1.time_trip_destination.time_component",
        "number": 1,
        "param_names": [],
        "params": [],
        "pretty_name": "example_mtc_full:trip_destination",
        "processes": 2,
        "sample_time": 0.01,
        "setup_cache_key": "C:\\Users\\jeffnewman\\activitysim_benchmarks\\benchmarks\\mtc1.py:69",
        "timeout": 36000.0,
        "type": "time",
        "unit": "seconds",
        "version": "8592f19e902161115468ea73d8595d4151c9b826b7d334da36c48ad7a79f3965",
        "warmup_time": -1
    },
    "mtc1.time_trip_mode_choice.time_component": {
        "code": "class ComponentTiming:\n    def time_component(self):\n        componentwise.run_component(self.component_name)\n\n    def setup(self):\n        componentwise.setup_component(self.component_name, model_dir(), PRELOAD_INJECTABLES)\n\ndef setup_cache():\n\n    if workspace.get_dir() is None:\n        from asv.console import log\n        for k,v in os.environ.items():\n            log.error(f\" env {k}: {v}\")\n        raise RuntimeError(\"workspace unavailable\")\n    os.makedirs(os.path.join(local_dir(), \"models\"), exist_ok=True)\n    get_example(\n        example_name=EXAMPLE_NAME,\n        destination=os.path.join(local_dir(), \"models\"),\n    )\n    settings_filename = os.path.join(model_dir(), \"configs\", \"settings.yaml\")\n    with open(settings_filename, 'rt') as f:\n        models = yaml.load(f, Loader=yaml.loader.SafeLoader).get('models')\n\n    last_component_to_benchmark = 0\n    for component_name in COMPONENT_NAMES:\n        last_component_to_benchmark = max(\n            models.index(component_name),\n            last_component_to_benchmark\n        )\n    pre_run_model_list = models[:last_component_to_benchmark]\n    modify_yaml(\n        os.path.join(model_dir(), \"configs\", \"settings.yaml\"),\n        **BENCHMARK_SETTINGS,\n        models=pre_run_model_list,\n        checkpoints=True,\n        trace_hh_id=None,\n        chunk_training_mode='off',\n    )\n    modify_yaml(\n        os.path.join(model_dir(), \"configs\", \"network_los.yaml\"),\n        read_skim_cache=True,\n    )\n    componentwise.pre_run(model_dir())",
        "min_run_count": 2,
        "name": "mtc1.time_trip_mode_choice.time_component",
        "number": 1,
        "param_names": [],
        "params": [],
        "pretty_name": "example_mtc_full:trip_mode_choice",
        "processes": 2,
        "sample_time": 0.01,
        "setup_cache_key": "C:\\Users\\jeffnewman\\activitysim_benchmarks\\benchmarks\\mtc1.py:69",
        "timeout": 36000.0,
        "type": "time",
        "unit": "seconds",
        "version": "8592f19e902161115468ea73d8595d4151c9b826b7d334da36c48ad7a79f3965",
        "warmup_time": -1
    },
    "mtc1.time_trip_purpose.time_component": {
        "code": "class ComponentTiming:\n    def time_component(self):\n        componentwise.run_component(self.component_name)\n\n    def setup(self):\n        componentwise.setup_component(self.component_name, model_dir(), PRELOAD_INJECTABLES)\n\ndef setup_cache():\n\n    if workspace.get_dir() is None:\n        from asv.console import log\n        for k,v in os.environ.items():\n            log.error(f\" env {k}: {v}\")\n        raise RuntimeError(\"workspace unavailable\")\n    os.makedirs(os.path.join(local_dir(), \"models\"), exist_ok=True)\n    get_example(\n        example_name=EXAMPLE_NAME,\n        destination=os.path.join(local_dir(), \"models\"),\n    )\n    settings_filename = os.path.join(model_dir(), \"configs\", \"settings.yaml\")\n    with open(settings_filename, 'rt') as f:\n        models = yaml.load(f, Loader=yaml.loader.SafeLoader).get('models')\n\n    last_component_to_benchmark = 0\n    for component_name in COMPONENT_NAMES:\n        last_component_to_benchmark = max(\n            models.index(component_name),\n            last_component_to_benchmark\n        )\n    pre_run_model_list = models[:last_component_to_benchmark]\n    modify_yaml(\n        os.path.join(model_dir(), \"configs\", \"settings.yaml\"),\n        **BENCHMARK_SETTINGS,\n        models=pre_run_model_list,\n        checkpoints=True,\n        trace_hh_id=None,\n        chunk_training_mode='off',\n    )\n    modify_yaml(\n        os.path.join(model_dir(), \"configs\", \"network_los.yaml\"),\n        read_skim_cache=True,\n    )\n    componentwise.pre_run(model_dir())",
        "min_run_count": 2,
        "name": "mtc1.time_trip_purpose.time_component",
        "number": 1,
        "param_names": [],
        "params": [],
        "pretty_name": "example_mtc_full:trip_purpose",
        "processes": 2,
        "sample_time": 0.01,
        "setup_cache_key": "C:\\Users\\jeffnewman\\activitysim_benchmarks\\benchmarks\\mtc1.py:69",
        "timeout": 36000.0,
        "type": "time",
        "unit": "seconds",
        "version": "8592f19e902161115468ea73d8595d4151c9b826b7d334da36c48ad7a79f3965",
        "warmup_time": -1
    },
    "mtc1.time_trip_purpose_and_destination.time_component": {
        "code": "class ComponentTiming:\n    def time_component(self):\n        componentwise.run_component(self.component_name)\n\n    def setup(self):\n        componentwise.setup_component(self.component_name, model_dir(), PRELOAD_INJECTABLES)\n\ndef setup_cache():\n\n    if workspace.get_dir() is None:\n        from asv.console import log\n        for k,v in os.environ.items():\n            log.error(f\" env {k}: {v}\")\n        raise RuntimeError(\"workspace unavailable\")\n    os.makedirs(os.path.join(local_dir(), \"models\"), exist_ok=True)\n    get_example(\n        example_name=EXAMPLE_NAME,\n        destination=os.path.join(local_dir(), \"models\"),\n    )\n    settings_filename = os.path.join(model_dir(), \"configs\", \"settings.yaml\")\n    with open(settings_filename, 'rt') as f:\n        models = yaml.load(f, Loader=yaml.loader.SafeLoader).get('models')\n\n    last_component_to_benchmark = 0\n    for component_name in COMPONENT_NAMES:\n        last_component_to_benchmark = max(\n            models.index(component_name),\n            last_component_to_benchmark\n        )\n    pre_run_model_list = models[:last_component_to_benchmark]\n    modify_yaml(\n        os.path.join(model_dir(), \"configs\", \"settings.yaml\"),\n        **BENCHMARK_SETTINGS,\n        models=pre_run_model_list,\n        checkpoints=True,\n        trace_hh_id=None,\n        chunk_training_mode='off',\n    )\n    modify_yaml(\n        os.path.join(model_dir(), \"configs\", \"network_los.yaml\"),\n        read_skim_cache=True,\n    )\n    componentwise.pre_run(model_dir())",
        "min_run_count": 2,
        "name": "mtc1.time_trip_purpose_and_destination.time_component",
        "number": 1,
        "param_names": [],
        "params": [],
        "pretty_name": "example_mtc_full:trip_purpose_and_destination",
        "processes": 2,
        "sample_time": 0.01,
        "setup_cache_key": "C:\\Users\\jeffnewman\\activitysim_benchmarks\\benchmarks\\mtc1.py:69",
        "timeout": 36000.0,
        "type": "time",
        "unit": "seconds",
        "version": "8592f19e902161115468ea73d8595d4151c9b826b7d334da36c48ad7a79f3965",
        "warmup_time": -1
    },
    "mtc1.time_trip_scheduling.time_component": {
        "code": "class ComponentTiming:\n    def time_component(self):\n        componentwise.run_component(self.component_name)\n\n    def setup(self):\n        componentwise.setup_component(self.component_name, model_dir(), PRELOAD_INJECTABLES)\n\ndef setup_cache():\n\n    if workspace.get_dir() is None:\n        from asv.console import log\n        for k,v in os.environ.items():\n            log.error(f\" env {k}: {v}\")\n        raise RuntimeError(\"workspace unavailable\")\n    os.makedirs(os.path.join(local_dir(), \"models\"), exist_ok=True)\n    get_example(\n        example_name=EXAMPLE_NAME,\n        destination=os.path.join(local_dir(), \"models\"),\n    )\n    settings_filename = os.path.join(model_dir(), \"configs\", \"settings.yaml\")\n    with open(settings_filename, 'rt') as f:\n        models = yaml.load(f, Loader=yaml.loader.SafeLoader).get('models')\n\n    last_component_to_benchmark = 0\n    for component_name in COMPONENT_NAMES:\n        last_component_to_benchmark = max(\n            models.index(component_name),\n            last_component_to_benchmark\n        )\n    pre_run_model_list = models[:last_component_to_benchmark]\n    modify_yaml(\n        os.path.join(model_dir(), \"configs\", \"settings.yaml\"),\n        **BENCHMARK_SETTINGS,\n        models=pre_run_model_list,\n        checkpoints=True,\n        trace_hh_id=None,\n        chunk_training_mode='off',\n    )\n    modify_yaml(\n        os.path.join(model_dir(), \"configs\", \"network_los.yaml\"),\n        read_skim_cache=True,\n    )\n    componentwise.pre_run(model_dir())",
        "min_run_count": 2,
        "name": "mtc1.time_trip_scheduling.time_component",
        "number": 1,
        "param_names": [],
        "params": [],
        "pretty_name": "example_mtc_full:trip_scheduling",
        "processes": 2,
        "sample_time": 0.01,
        "setup_cache_key": "C:\\Users\\jeffnewman\\activitysim_benchmarks\\benchmarks\\mtc1.py:69",
        "timeout": 36000.0,
        "type": "time",
        "unit": "seconds",
        "version": "8592f19e902161115468ea73d8595d4151c9b826b7d334da36c48ad7a79f3965",
        "warmup_time": -1
    },
    "mtc1.time_workplace_location.time_component": {
        "code": "class ComponentTiming:\n    def time_component(self):\n        componentwise.run_component(self.component_name)\n\n    def setup(self):\n        componentwise.setup_component(self.component_name, model_dir(), PRELOAD_INJECTABLES)\n\ndef setup_cache():\n\n    if workspace.get_dir() is None:\n        from asv.console import log\n        for k,v in os.environ.items():\n            log.error(f\" env {k}: {v}\")\n        raise RuntimeError(\"workspace unavailable\")\n    os.makedirs(os.path.join(local_dir(), \"models\"), exist_ok=True)\n    get_example(\n        example_name=EXAMPLE_NAME,\n        destination=os.path.join(local_dir(), \"models\"),\n    )\n    settings_filename = os.path.join(model_dir(), \"configs\", \"settings.yaml\")\n    with open(settings_filename, 'rt') as f:\n        models = yaml.load(f, Loader=yaml.loader.SafeLoader).get('models')\n\n    last_component_to_benchmark = 0\n    for component_name in COMPONENT_NAMES:\n        last_component_to_benchmark = max(\n            models.index(component_name),\n            last_component_to_benchmark\n        )\n    pre_run_model_list = models[:last_component_to_benchmark]\n    modify_yaml(\n        os.path.join(model_dir(), \"configs\", \"settings.yaml\"),\n        **BENCHMARK_SETTINGS,\n        models=pre_run_model_list,\n        checkpoints=True,\n        trace_hh_id=None,\n        chunk_training_mode='off',\n    )\n    modify_yaml(\n        os.path.join(model_dir(), \"configs\", \"network_los.yaml\"),\n        read_skim_cache=True,\n    )\n    componentwise.pre_run(model_dir())",
        "min_run_count": 2,
        "name": "mtc1.time_workplace_location.time_component",
        "number": 1,
        "param_names": [],
        "params": [],
        "pretty_name": "example_mtc_full:workplace_location",
        "processes": 2,
        "sample_time": 0.01,
        "setup_cache_key": "C:\\Users\\jeffnewman\\activitysim_benchmarks\\benchmarks\\mtc1.py:69",
        "timeout": 36000.0,
        "type": "time",
        "unit": "seconds",
        "version": "8592f19e902161115468ea73d8595d4151c9b826b7d334da36c48ad7a79f3965",
        "warmup_time": -1
    },
    "version": 2
}